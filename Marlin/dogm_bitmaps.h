// BitMap for splashscreen
// Generated with: http://www.digole.com/tools/PicturetoC_Hex_converter.php
// Please note that using the high-res version takes 402Bytes of PROGMEM.
//#define START_BMPHIGH

#if ENABLED(SHOW_BOOTSCREEN)
  #if ENABLED(START_BMPHIGH)
    #define START_BMPWIDTH      112
    #define START_BMPHEIGHT      38
    #define START_BMPBYTEWIDTH   14
    #define START_BMPBYTES      532 // START_BMPWIDTH * START_BMPHEIGHT / 8

    const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
      0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF,
      0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF,
      0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
      0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x3F, 0xFF,
      0xC0, 0x0F, 0xC0, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x18, 0x00, 0x1F, 0xFF,
      0xC0, 0x3F, 0xE1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x0F, 0xFF,
      0xC0, 0x7F, 0xF3, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x07, 0xFF,
      0xC0, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x03, 0xFF,
      0xC1, 0xF8, 0x7F, 0x87, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x01, 0xFF,
      0xC1, 0xF0, 0x3F, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xFF,
      0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x1F, 0x00, 0x03, 0xE0, 0x78, 0x3C, 0x03, 0xF0, 0x7F,
      0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x7F, 0xC0, 0x0F, 0xF8, 0x78, 0x3C, 0x07, 0xFC, 0x3F,
      0xC1, 0xE0, 0x1E, 0x01, 0xE1, 0xFF, 0xE0, 0x1F, 0xFC, 0x78, 0x3C, 0x0F, 0xFE, 0x1F,
      0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xFF, 0xF0, 0x3F, 0xFE, 0x78, 0x3C, 0x1F, 0xFE, 0x0F,
      0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xF3, 0xF8, 0x3F, 0x3E, 0x78, 0x3C, 0x3F, 0x3F, 0x07,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xE0, 0xFC, 0x7C, 0x1F, 0x78, 0x3C, 0x3E, 0x1F, 0x07,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xC0, 0x7C, 0x7C, 0x0F, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x7C, 0x78, 0x0F, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xC0, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xE0, 0x3C, 0x78, 0x00, 0x7C, 0x3C, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xFF, 0x3F, 0xF8, 0x00, 0x7F, 0xBC, 0x3C, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE1, 0xFF, 0x3F, 0xF8, 0x00, 0x3F, 0xBF, 0xFC, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0xFF, 0x3F, 0xF8, 0x00, 0x1F, 0xBF, 0xFC, 0x0F, 0x03,
      0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x7F, 0x3F, 0xF8, 0x00, 0x0F, 0xBF, 0xFC, 0x0F, 0x03,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
      0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
      0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C,
      0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
      0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
      0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80 };
  #else
    #define START_BMPWIDTH      56
    #define START_BMPHEIGHT     19
    #define START_BMPBYTEWIDTH  7
    #define START_BMPBYTES      133 // START_BMPWIDTH * START_BMPHEIGHT / 8

    const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
      0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
      0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
      0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
      0x83, 0xCF, 0x00, 0x00, 0x0C, 0x30, 0x3F,
      0x87, 0xFF, 0x80, 0x00, 0x0C, 0x30, 0x1F,
      0x86, 0x79, 0x80, 0x00, 0x0C, 0x00, 0x0F,
      0x8C, 0x30, 0xC7, 0x83, 0x8C, 0x30, 0xE7,
      0x8C, 0x30, 0xCF, 0xC7, 0xCC, 0x31, 0xF3,
      0x8C, 0x30, 0xDC, 0xEC, 0xEC, 0x33, 0xB9,
      0x8C, 0x30, 0xD8, 0x6C, 0x6C, 0x33, 0x19,
      0x8C, 0x30, 0xD0, 0x6C, 0x0C, 0x33, 0x19,
      0x8C, 0x30, 0xD8, 0x6C, 0x0C, 0x33, 0x19,
      0x8C, 0x30, 0xDC, 0x6C, 0x0E, 0x3B, 0x19,
      0x8C, 0x30, 0xCF, 0x7C, 0x07, 0x9F, 0x19,
      0x8C, 0x30, 0xC7, 0x7C, 0x03, 0x8F, 0x19,
      0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
      0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
      0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8 };
  #endif
#endif

// Here comes a compile-time operation to match the extruder symbols
// on the info screen to the set number of extruders in configuration.h
//
// When only one extruder is selected, the "0" on the symbol will not
// be displayed.

#define STATUS_EXTRUDER_WIDTH 10
#define STATUS_EXTRUDER_BYTEWIDTH 2
#define STATUS_EXTRUDER_HEIGHT 12

const unsigned char extruder_graphic[EXTRUDERS][2][STATUS_EXTRUDER_BYTEWIDTH*STATUS_EXTRUDER_HEIGHT] PROGMEM =
{
  #if EXTRUDERS == 1
    {
      {
         0x7f,0x80 // " "
        ,0xff,0xc0
        ,0xff,0xc0
        ,0xff,0xc0
        ,0x7f,0x80
        ,0x7f,0x80
        ,0xff,0xc0
        ,0xff,0xc0
        ,0xff,0xc0
        ,0x3f,0x00
        ,0x1e,0x00
        ,0x0c,0x00
      },
      {
         0x7f,0x80
        ,0xff,0xc0
        ,0xff,0xc0
        ,0xff,0xc0
        ,0x7f,0x80
        ,0x7f,0x80
        ,0xff,0xc0
        ,0xff,0xc0
        ,0xff,0xc0
        ,0x33,0x00
        ,0x12,0x00
    ,0x0c,0x00
      }
    }
  #endif
  #if EXTRUDERS >= 2
    {
      {
         0x7f,0x80 // "0"
        ,0xf3,0xc0
        ,0xed,0xc0
        ,0xed,0xc0
        ,0x6d,0x80
        ,0x6d,0x80
        ,0xed,0xc0
        ,0xf3,0xc0
        ,0xff,0xc0
        ,0x3f,0x00
        ,0x1e,0x00
        ,0x0c,0x00
      },
      {
         0x7f,0x80
        ,0xf3,0xc0
        ,0xed,0xc0
        ,0xed,0xc0
        ,0x6d,0x80
        ,0x6d,0x80
        ,0xed,0xc0
        ,0xf3,0xc0
        ,0xff,0xc0
        ,0x33,0x00
        ,0x12,0x00
        ,0x0c,0x00
      }
    },
    {
      {
         0x7f,0x80 // "1"
        ,0xfb,0xc0
        ,0xf3,0xc0
        ,0xeb,0xc0
        ,0x7b,0x80
        ,0x7b,0x80
        ,0xfb,0xc0
        ,0xfb,0xc0
        ,0xff,0xc0
        ,0x3f,0x00
        ,0x1e,0x00
        ,0x0c,0x00
      },
      {
         0x7f,0x80
        ,0xfb,0xc0
        ,0xf3,0xc0
        ,0xeb,0xc0
        ,0x7b,0x80
        ,0x7b,0x80
        ,0xfb,0xc0
        ,0xfb,0xc0
        ,0xff,0xc0
        ,0x33,0x00
        ,0x12,0x00
        ,0x0c,0x00
      }
    }
  #endif
  #if EXTRUDERS >= 3
    ,
    {
      {
         0x7f,0x80 // "2"
        ,0xf3,0xc0
        ,0xed,0xc0
        ,0xfd,0xc0
        ,0x7b,0x80
        ,0x77,0x80
        ,0xef,0xc0
        ,0xe1,0xc0
        ,0xff,0xc0
        ,0x3f,0x00
        ,0x1e,0x00
        ,0x0c,0x00
      },
      {
         0x7f,0x80
        ,0xf3,0xc0
        ,0xed,0xc0
        ,0xfd,0xc0
        ,0x7b,0x80
        ,0x77,0x80
        ,0xef,0xc0
        ,0xe1,0xc0
        ,0xff,0xc0
        ,0x33,0x00
        ,0x12,0x00
        ,0x0c,0x00
      }
    }
  #endif
  #if EXTRUDERS >= 4
    ,
    {
      {
         0x7f,0x80 // "3"
        ,0xf3,0xc0
        ,0xed,0xc0
        ,0xfd,0xc0
        ,0x73,0x80
        ,0x7d,0x80
        ,0xed,0xc0
        ,0xf3,0xc0
        ,0xff,0xc0
        ,0x3f,0x00
        ,0x1e,0x00
        ,0x0c,0x00
      },
      {
         0x7f,0x80
        ,0xf3,0xc0
        ,0xed,0xc0
        ,0xfd,0xc0
        ,0x73,0x80
        ,0x7d,0x80
        ,0xed,0xc0
        ,0xf3,0xc0
        ,0xff,0xc0
        ,0x33,0x00
        ,0x12,0x00
        ,0x0c,0x00
      }
    }
  #endif
  #if EXTRUDERS >= 5
    ,
    {
      {
         0x7f,0x80 // "4"
        ,0xeb,0xc0
        ,0xeb,0xc0
        ,0xeb,0xc0
        ,0x61,0x80
        ,0x7b,0x80
        ,0xfb,0xc0
        ,0xfb,0xc0
        ,0xff,0xc0
        ,0x3f,0x00
        ,0x1e,0x00
        ,0x0c,0x00
      },
      {
         0x7f,0x80
        ,0xeb,0xc0
        ,0xeb,0xc0
        ,0xeb,0xc0
        ,0x61,0x80
        ,0x7b,0x80
        ,0xfb,0xc0
        ,0xfb,0xc0
        ,0xff,0xc0
        ,0x33,0x00
        ,0x12,0x00
        ,0x0c,0x00
      }
    }
  #endif
};


#define STATUS_BED_WIDTH 16
#define STATUS_BED_BYTEWIDTH 2
#define STATUS_BED_HEIGHT 12

#if HAS_TEMP_BED
  const unsigned char bed_graphic[2][STATUS_BED_BYTEWIDTH*STATUS_BED_HEIGHT] PROGMEM =
  {
    {
       0x20,0x82
      ,0x10,0x41
      ,0x10,0x41
      ,0x20,0x82
      ,0x41,0x04
      ,0x82,0x08
      ,0x82,0x08
      ,0x41,0x04
      ,0x20,0x82
      ,0x00,0x00
      ,0xff,0xff
      ,0xff,0xff
    },
    {
       0x20,0x82
      ,0x10,0x41
      ,0x10,0x41
      ,0x20,0x82
      ,0x41,0x04
      ,0x82,0x08
      ,0x82,0x08
      ,0x41,0x04
      ,0x20,0x82
      ,0x00,0x00
      ,0xfe,0x7f
      ,0xfe,0x7f
    }
  };
#endif //HAS_TEMP_BED

#define STATUS_FAN_WIDTH 18
#define STATUS_FAN_BYTEWIDTH 3
#define STATUS_FAN_HEIGHT 18

#if HAS_FAN
  const unsigned char fan_graphic[2][STATUS_FAN_BYTEWIDTH*STATUS_FAN_HEIGHT] PROGMEM =
  {
    {
       0xff,0xff,0xc0
      ,0xe0,0x01,0xc0
      ,0xc3,0xf0,0xc0
      ,0x83,0xf0,0x40
      ,0x81,0xe0,0x40
      ,0x80,0xc0,0x40
      ,0xb0,0x03,0x40
      ,0xb8,0xc7,0x40
      ,0xbd,0xef,0x40
      ,0xbd,0xef,0x40
      ,0xb8,0xc7,0x40
      ,0xb0,0x03,0x40
      ,0x80,0xc0,0x40
      ,0x81,0xe0,0x40
      ,0x83,0xf0,0x40
      ,0xc3,0xf0,0xc0
      ,0xe0,0x01,0xc0
      ,0xff,0xff,0xc0
    },
    {
       0xff,0xff,0xc0
      ,0xe0,0x01,0xc0
      ,0xc6,0x18,0xc0
      ,0x8e,0x1c,0x40
      ,0x9e,0x1e,0x40
      ,0xbe,0x1f,0x40
      ,0xbc,0x0f,0x40
      ,0x80,0xc0,0x40
      ,0x81,0xe0,0x40
      ,0x81,0xe0,0x40
      ,0x80,0xc0,0x40
      ,0xbc,0x0f,0x40
      ,0xbe,0x1f,0x40
      ,0x9e,0x1e,0x40
      ,0x8e,0x1c,0x40
      ,0xc6,0x18,0xc0
      ,0xe0,0x01,0xc0
      ,0xff,0xff,0xc0
    }
  };
#endif //HAS_FAN


#define STATUS_SD0_WIDTH 8
#define STATUS_SD0_BYTEWIDTH 1
#define STATUS_SD0_HEIGHT 6

#if ENABLED(SDSUPPORT)
  const unsigned char sd0_graphic[STATUS_SD0_BYTEWIDTH*STATUS_SD0_HEIGHT] PROGMEM =
  {
     0xfc
    ,0x82
    ,0x81
    ,0x81
    ,0x81
    ,0xff
  };
#endif //SDSUPPORT

#define STATUS_SD1_WIDTH 8
#define STATUS_SD1_BYTEWIDTH 1
#define STATUS_SD1_HEIGHT 10

#if ENABLED(SDSUPPORT)
  const unsigned char sd1_graphic[STATUS_SD1_BYTEWIDTH*STATUS_SD1_HEIGHT] PROGMEM =
  {
    0xfc
   ,0x82
   ,0x81
   ,0x81
   ,0x81
   ,0xff
   ,0xff
   ,0xff
   ,0xff
   ,0xff
  };
#endif //SDSUPPORT